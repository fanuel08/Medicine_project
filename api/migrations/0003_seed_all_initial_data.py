# Generated by Django 5.2.1 on 2025-06-14 01:56

from django.db import migrations

def populate_all_initial_data(apps, schema_editor):
    """
    Populates all necessary lookup tables in the correct order.
    """
    # Get the models from the versioned app registry
    Language = apps.get_model('api', 'Language')
    PaymentDeclaration = apps.get_model('api', 'PaymentDeclaration')
    UssdMenuText = apps.get_model('api', 'UssdMenuText')

    # --- STEP 1: Populate Languages ---
    # This must run first.
    Language.objects.bulk_create([
        Language(language_code='en', language_name='English'),
        Language(language_code='sw', language_name='Swahili'),
    ], ignore_conflicts=True)
    print("\n   - Languages populated.")

    # --- STEP 2: Populate Payment Declarations ---
    PaymentDeclaration.objects.bulk_create([
        PaymentDeclaration(status_code='standard', description='Can pay standard fee'),
        PaymentDeclaration(status_code='small_fee', description='Can pay something small'),
        PaymentDeclaration(status_code='cannot_pay', description='Currently cannot pay'),
    ], ignore_conflicts=True)
    print("   - Payment Declarations populated.")

    # --- STEP 3: Populate USSD Menu Text ---
    # This step depends on the languages created above.
    try:
        english = Language.objects.get(language_code='en')
        swahili = Language.objects.get(language_code='sw')
    except Language.DoesNotExist:
        # This is a safeguard, but it should not happen if the order is correct.
        print("\n   - CRITICAL: Could not find base languages to seed menu text. Aborting.")
        return

    menu_data = [
        # English Texts
        {'menu_key': 'welcome_menu', 'language': english, 'menu_text': 'CON Welcome to AfyaLink!\nPlease select your language:\n1. English\n2. Swahili'},
        {'menu_key': 'payment_declaration_menu', 'language': english, 'menu_text': 'CON Please tell us your situation:\n1. I can pay the standard fee\n2. I can pay something small\n3. I currently cannot pay'},
        {'menu_key': 'enter_symptom_menu', 'language': english, 'menu_text': 'CON Thank you. Please briefly describe your health issue.'},
        {'menu_key': 'case_created_success', 'language': english, 'menu_text': 'END Thank you. Your case number is {case_id}. An agent will call you shortly.'},
        {'menu_key': 'invalid_selection_menu', 'language': english, 'menu_text': 'END Invalid selection. Please try again.'},
        
        # Swahili Texts
        {'menu_key': 'payment_declaration_menu', 'language': swahili, 'menu_text': 'CON Tafadhali tuambie hali yako:\n1. Naweza kulipa ada kamili\n2. Naweza kulipa kiasi kidogo\n3. Siwezi kulipa kwa sasa'},
        {'menu_key': 'enter_symptom_menu', 'language': swahili, 'menu_text': 'CON Asante. Tafadhali eleza tatizo lako la kiafya kwa ufupi.'},
        {'menu_key': 'case_created_success', 'language': swahili, 'menu_text': 'END Asante. Umeunda kesi nambari {case_id}. Mhudumu atakupigia simu hivi karibuni.'},
        {'menu_key': 'invalid_selection_menu', 'language': swahili, 'menu_text': 'END Chaguo lako si sahihi. Tafadhali jaribu tena.'},
    ]
    menu_objects = [UssdMenuText(**data) for data in menu_data]
    UssdMenuText.objects.bulk_create(menu_objects, ignore_conflicts=True)
    print("   - USSD Menu Text populated.")


class Migration(migrations.Migration):

    dependencies = [
        # This migration should depend on the migration that created the UssdMenuText table.
        # This will likely be '0002_ussdmenutext'. Check your folder to be sure.
        ('api', '0002_ussdmenutext'),
    ]

    operations = [
        # This tells Django to run our single, combined function.
        migrations.RunPython(populate_all_initial_data),
    ]

